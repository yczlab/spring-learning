<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uitl="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <!--
        配置bean：
        class：bean的全类名，通过反射的方式在IOC容器中创建Bean，所以要求Bean中必须有无参的构造器
        id：标识容器中的bean，di是唯一的。
    -->
    <bean id="helloWorld2" class="com.yczlab.spring.beans.HelloWorld">
        <property name="name" value="yczlab"></property>
    </bean>
    <bean id="helloWorld" class="com.yczlab.spring.beans.HelloWorld">
        <property name="name" value="yczlab"></property>
    </bean>

    <!--通过构造方法来配置bean的属性-->
    <bean id="car" class="com.yczlab.spring.beans.Car">
        <constructor-arg value="Audi" index="0"></constructor-arg>
        <constructor-arg value="ShangHai" index="1"></constructor-arg>
        <constructor-arg value="300000" index="2" type="double"></constructor-arg>
    </bean>
    <!--使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器-->
    <bean id="car2" class="com.yczlab.spring.beans.Car">
        <constructor-arg value="Baoma" type="java.lang.String"></constructor-arg>
        <!--如果字面值包含特殊字符，可以使用<![CDATA[]]> 包裹起来-->
        <!--属性值也可以使用value子节点进行配置-->
        <constructor-arg type="java.lang.String">
            <value><![CDATA[<ShanHai^>]]></value>
        </constructor-arg>
        <constructor-arg type="int">
            <value>250</value>
        </constructor-arg>
    </bean>

    <bean id="person" class="com.yczlab.spring.beans.Person">
        <property name="name" value="Tom"></property>
        <property name="age" value="24"></property>
        <!--可以使用property的ref属性或ref建立bean之间的引用关系-->
        <!-- <property name="car" ref="car2"></property> -->
        <!--
        <property name="car">
            <ref bean="car2"></ref>
        </property>
        -->
        <!--也可以使用内部bean，内部bean不能被外部使用，只能在内部使用，所以id属性没必要-->
        <property name="car">
            <bean id="car3" class="com.yczlab.spring.beans.Car">
                <constructor-arg value="Ford"></constructor-arg>
                <constructor-arg value="ChangAn"></constructor-arg>
                <constructor-arg value="200000" type="double"></constructor-arg>
            </bean>
        </property>
    </bean>
    <bean id="person2" class="com.yczlab.spring.beans.Person">
        <constructor-arg value="Jerry"></constructor-arg>
        <constructor-arg value="25"></constructor-arg>
        <!-- <constructor-arg ref="car"></constructor-arg> -->
        <!--测试null值，属性为引用数据类型时，可以为其赋值为null，意义不大，因为这类数据默认初始化值就是null-->
        <!-- <constructor-arg><null/></constructor-arg> -->
        <constructor-arg ref="car"></constructor-arg>
        <!-- 为级联属性赋值。注意：属性（car）需要先初始化后才能为级联属性赋值，否则会有异常 -->
        <property name="car.maxSpeed" value="250"></property>
    </bean>


    <!-- 测试如何配置集合属性 -->
    <!-- 配置Lis属性值 -->
    <bean id="listPerson" class="com.yczlab.spring.beans.collections.ListPerson">
        <property name="name" value="Mike"></property>
        <property name="age" value="27"></property>
        <property name="cars">
            <!-- 使用list节点为List类型的属性赋值-->
            <list>
                <ref bean="car"></ref>
                <ref bean="car2"/>
                <bean class="com.yczlab.spring.beans.Car">
                    <constructor-arg value="Ford"></constructor-arg>
                    <constructor-arg value="ChangAn"></constructor-arg>
                    <constructor-arg value="200000" type="double"></constructor-arg>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 配置Map属性值 -->
    <bean id="mapPerson" class="com.yczlab.spring.beans.collections.MapPerson">
        <property name="name" value="Rose"></property>
        <property name="age" value="28"></property>
        <property name="cars">
            <!--使用map节点及map的entry子节点配置Map类型的成员变量-->
            <map>
                <entry key="AA" value-ref="car"></entry>
                <entry key="BB" value-ref="car"></entry>
            </map>
        </property>
    </bean>

    <!-- 配置Properties属性值 -->
    <bean id="dataSource" class="com.yczlab.spring.beans.collections.DataSource">
        <property name="properties">
            <!--使用props和prop节点来为Properties属性赋值-->
            <props>
                <prop key="user">root</prop>
                <prop key="password">1234</prop>
                <prop key="jdbcUrl">jdbc:mysql:///test</prop>
                <prop key="driverClass">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>

    <!--配置独立的集合Bean，以供多个Bean进行引用。需导入util命名空间-->
    <uitl:list id="cars">
        <ref bean="car"></ref>
        <ref bean="car2"/>
    </uitl:list>
    <bean id="listPerson1" class="com.yczlab.spring.beans.collections.ListPerson">
        <property name="name" value="Jack"></property>
        <property name="age" value="29"></property>
        <property name="cars" ref="cars"></property>
    </bean>

</beans>